Terminals unused in grammar

   ENUM


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: IDENT COLON INTEGER
    8            | IDENT COMMA IDENT COLON INTEGER
    9            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COMMA IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 statements: %empty
   12           | statement SEMICOLON statements

   13 statement: var ASSIGN expression
   14          | IF bool_expr THEN statements ENDIF
   15          | IF bool_expr THEN statements ELSE statements ENDIF
   16          | WHILE bool_expr BEGINLOOP statements ENDIF
   17          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   18          | FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 bool_expr: relation_and_expr
   24          | relation_and_expr OR bool_expr

   25 relation_and_expr: relation_expr
   26                  | relation_expr AND relation_and_expr

   27 relation_expr: expression comp expression
   28              | NOT expression comp expression
   29              | TRUE
   30              | NOT TRUE
   31              | FALSE
   32              | NOT FALSE
   33              | L_PAREN bool_expr R_PAREN
   34              | NOT L_PAREN bool_expr R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expressions: expression COMMA expressions
   42            | expression

   43 expression: multiplicative-expr
   44           | multiplicative-expr ADD multiplicative-expr
   45           | multiplicative-expr SUB multiplicative-expr

   46 multiplicative-expr: term
   47                    | term MULT multiplicative-expr
   48                    | term DIV multiplicative-expr
   49                    | term MOD multiplicative-expr

   50 term: SUB var
   51     | SUB NUMBER
   52     | SUB L_PAREN expression R_PAREN
   53     | var
   54     | NUMBER
   55     | L_PAREN expression R_PAREN
   56     | IDENT L_PAREN expressions R_PAREN

   57 vars: %empty
   58     | var COMMA vars

   59 var: IDENT
   60    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGINPARAMS (259) 4
ENDPARAMS (260) 4
BEGINLOCALS (261) 4
ENDLOCALS (262) 4
BEGINBODY (263) 4
ENDBODY (264) 4
INTEGER (265) 7 8 9 10
ARRAY (266) 9
ENUM (267)
OF (268) 9 10
IF (269) 14 15
THEN (270) 14 15
ENDIF (271) 14 15 16
ELSE (272) 15
WHILE (273) 16 17
FOR (274) 18
DO (275) 17
BEGINLOOP (276) 16 17 18
ENDLOOP (277) 17 18
CONTINUE (278) 21
READ (279) 19
WRITE (280) 20
TRUE (281) 29 30
FALSE (282) 31 32
SEMICOLON (283) 4 6 12 18
COLON (284) 7 8 9 10
COMMA (285) 8 10 41 58
L_PAREN (286) 33 34 52 55 56
R_PAREN (287) 33 34 52 55 56
L_SQUARE_BRACKET (288) 9 10 60
R_SQUARE_BRACKET (289) 9 10 60
ASSIGN (290) 13 18
RETURN (291) 22
IDENT (292) 4 7 8 9 10 56 59 60
NUMBER (293) 9 10 18 51 54
OR (294) 24
AND (295) 26
NOT (296) 28 30 32 34
LT (297) 37
LTE (298) 39
GT (299) 38
GTE (300) 40
EQ (301) 35
NEQ (302) 36
ADD (303) 44
SUB (304) 45 50 51 52
MULT (305) 47
DIV (306) 48
MOD (307) 49


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9 10, on right: 6
statements (59)
    on left: 11 12, on right: 4 12 14 15 16 17 18
statement (60)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 12
bool_expr (61)
    on left: 23 24, on right: 14 15 16 17 18 24 33 34
relation_and_expr (62)
    on left: 25 26, on right: 23 24 26
relation_expr (63)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (64)
    on left: 35 36 37 38 39 40, on right: 27 28
expressions (65)
    on left: 41 42, on right: 41 56
expression (66)
    on left: 43 44 45, on right: 13 18 22 27 28 41 42 52 55 60
multiplicative-expr (67)
    on left: 46 47 48 49, on right: 43 44 45 47 48 49
term (68)
    on left: 50 51 52 53 54 55 56, on right: 46 47 48 49
vars (69)
    on left: 57 58, on right: 18 19 20 58
var (70)
    on left: 59 60, on right: 13 50 53 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12


State 10

    7 declaration: IDENT . COLON INTEGER
    8            | IDENT . COMMA IDENT COLON INTEGER
    9            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT . COMMA IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: IDENT COLON . INTEGER
    9            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 17
    ARRAY    shift, and go to state 18


State 14

    8 declaration: IDENT COMMA . IDENT COLON INTEGER
   10            | IDENT COMMA . IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    IDENT  shift, and go to state 19


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 20


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 21
    declaration   go to state 12


State 17

    7 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 18

    9 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 19

    8 declaration: IDENT COMMA IDENT . COLON INTEGER
   10            | IDENT COMMA IDENT . COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 23


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12


State 21

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 22

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25


State 23

    8 declaration: IDENT COMMA IDENT COLON . INTEGER
   10            | IDENT COMMA IDENT COLON . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER           shift, and go to state 26
    L_SQUARE_BRACKET  shift, and go to state 27


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 28


State 25

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 26

    8 declaration: IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 27

   10 declaration: IDENT COMMA IDENT COLON L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 31


State 29

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 32


State 30

   10 declaration: IDENT COMMA IDENT COLON L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


State 32

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 46


State 33

   10 declaration: IDENT COMMA IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 47


State 34

   14 statement: IF . bool_expr THEN statements ENDIF
   15          | IF . bool_expr THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 55
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 35

   16 statement: WHILE . bool_expr BEGINLOOP statements ENDIF

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 62
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 36

   18 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 42

    $default  reduce using rule 57 (vars)

    vars  go to state 63
    var   go to state 64


State 37

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 65


State 38

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 39

   19 statement: READ . vars

    IDENT  shift, and go to state 42

    $default  reduce using rule 57 (vars)

    vars  go to state 66
    var   go to state 64


State 40

   20 statement: WRITE . vars

    IDENT  shift, and go to state 42

    $default  reduce using rule 57 (vars)

    vars  go to state 67
    var   go to state 64


State 41

   22 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 69
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 42

   59 var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 59 (var)


State 43

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 71


State 44

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 72


State 45

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 46

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 47

   10 declaration: IDENT COMMA IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 74


State 48

   29 relation_expr: TRUE .

    $default  reduce using rule 29 (relation_expr)


State 49

   31 relation_expr: FALSE .

    $default  reduce using rule 31 (relation_expr)


State 50

   33 relation_expr: L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 75
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 76
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 51

   56 term: IDENT . L_PAREN expressions R_PAREN
   59 var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 77
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 59 (var)


State 52

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


State 53

   28 relation_expr: NOT . expression comp expression
   30              | NOT . TRUE
   32              | NOT . FALSE
   34              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 78
    FALSE    shift, and go to state 79
    L_PAREN  shift, and go to state 80
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 81
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 54

   50 term: SUB . var
   51     | SUB . NUMBER
   52     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 82
    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 83

    var  go to state 84


State 55

   14 statement: IF bool_expr . THEN statements ENDIF
   15          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 85


State 56

   23 bool_expr: relation_and_expr .
   24          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 86

    $default  reduce using rule 23 (bool_expr)


State 57

   25 relation_and_expr: relation_expr .
   26                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 87

    $default  reduce using rule 25 (relation_and_expr)


State 58

   27 relation_expr: expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 94


State 59

   43 expression: multiplicative-expr .
   44           | multiplicative-expr . ADD multiplicative-expr
   45           | multiplicative-expr . SUB multiplicative-expr

    ADD  shift, and go to state 95
    SUB  shift, and go to state 96

    $default  reduce using rule 43 (expression)


State 60

   46 multiplicative-expr: term .
   47                    | term . MULT multiplicative-expr
   48                    | term . DIV multiplicative-expr
   49                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 46 (multiplicative-expr)


State 61

   53 term: var .

    $default  reduce using rule 53 (term)


State 62

   16 statement: WHILE bool_expr . BEGINLOOP statements ENDIF

    BEGINLOOP  shift, and go to state 100


State 63

   18 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 101


State 64

   58 vars: var . COMMA vars

    COMMA  shift, and go to state 102


State 65

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 103
    statement   go to state 44
    var         go to state 45


State 66

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 67

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 68

   55 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 104
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 69

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 70

   60 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 105
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 71

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 72

   12 statements: statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 106
    statement   go to state 44
    var         go to state 45


State 73

   13 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 107
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 74

   10 declaration: IDENT COMMA IDENT COLON L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 75

   33 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 108


State 76

   27 relation_expr: expression . comp expression
   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 109
    LT       shift, and go to state 88
    LTE      shift, and go to state 89
    GT       shift, and go to state 90
    GTE      shift, and go to state 91
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93

    comp  go to state 94


State 77

   56 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expressions          go to state 110
    expression           go to state 111
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 78

   30 relation_expr: NOT TRUE .

    $default  reduce using rule 30 (relation_expr)


State 79

   32 relation_expr: NOT FALSE .

    $default  reduce using rule 32 (relation_expr)


State 80

   34 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 112
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 76
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 81

   28 relation_expr: NOT expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 113


State 82

   52 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 114
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 83

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 84

   50 term: SUB var .

    $default  reduce using rule 50 (term)


State 85

   14 statement: IF bool_expr THEN . statements ENDIF
   15          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 115
    statement   go to state 44
    var         go to state 45


State 86

   24 bool_expr: relation_and_expr OR . bool_expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 116
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 87

   26 relation_and_expr: relation_expr AND . relation_and_expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    relation_and_expr    go to state 117
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 88

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 89

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 90

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 91

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 92

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 93

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 94

   27 relation_expr: expression comp . expression

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 118
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 95

   44 expression: multiplicative-expr ADD . multiplicative-expr

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    multiplicative-expr  go to state 119
    term                 go to state 60
    var                  go to state 61


State 96

   45 expression: multiplicative-expr SUB . multiplicative-expr

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    multiplicative-expr  go to state 120
    term                 go to state 60
    var                  go to state 61


State 97

   47 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    multiplicative-expr  go to state 121
    term                 go to state 60
    var                  go to state 61


State 98

   48 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    multiplicative-expr  go to state 122
    term                 go to state 60
    var                  go to state 61


State 99

   49 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    multiplicative-expr  go to state 123
    term                 go to state 60
    var                  go to state 61


State 100

   16 statement: WHILE bool_expr BEGINLOOP . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 124
    statement   go to state 44
    var         go to state 45


State 101

   18 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 125


State 102

   58 vars: var COMMA . vars

    IDENT  shift, and go to state 42

    $default  reduce using rule 57 (vars)

    vars  go to state 126
    var   go to state 64


State 103

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 127


State 104

   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 109


State 105

   60 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 106

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 107

   13 statement: var ASSIGN expression .

    $default  reduce using rule 13 (statement)


State 108

   33 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 33 (relation_expr)


State 109

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 110

   56 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 111

   41 expressions: expression . COMMA expressions
   42            | expression .

    COMMA  shift, and go to state 130

    $default  reduce using rule 42 (expressions)


State 112

   34 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 131


State 113

   28 relation_expr: NOT expression comp . expression

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 132
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 114

   52 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 133


State 115

   14 statement: IF bool_expr THEN statements . ENDIF
   15          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


State 116

   24 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 24 (bool_expr)


State 117

   26 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 26 (relation_and_expr)


State 118

   27 relation_expr: expression comp expression .

    $default  reduce using rule 27 (relation_expr)


State 119

   44 expression: multiplicative-expr ADD multiplicative-expr .

    $default  reduce using rule 44 (expression)


State 120

   45 expression: multiplicative-expr SUB multiplicative-expr .

    $default  reduce using rule 45 (expression)


State 121

   47 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 47 (multiplicative-expr)


State 122

   48 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 48 (multiplicative-expr)


State 123

   49 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 49 (multiplicative-expr)


State 124

   16 statement: WHILE bool_expr BEGINLOOP statements . ENDIF

    ENDIF  shift, and go to state 136


State 125

   18 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 137


State 126

   58 vars: var COMMA vars .

    $default  reduce using rule 58 (vars)


State 127

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 138


State 128

   60 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 129

   56 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 56 (term)


State 130

   41 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expressions          go to state 139
    expression           go to state 111
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 131

   34 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 34 (relation_expr)


State 132

   28 relation_expr: NOT expression comp expression .

    $default  reduce using rule 28 (relation_expr)


State 133

   52 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 134

   14 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 135

   15 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 140
    statement   go to state 44
    var         go to state 45


State 136

   16 statement: WHILE bool_expr BEGINLOOP statements ENDIF .

    $default  reduce using rule 16 (statement)


State 137

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 141
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 138

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    SUB      shift, and go to state 54

    bool_expr            go to state 142
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 139

   41 expressions: expression COMMA expressions .

    $default  reduce using rule 41 (expressions)


State 140

   15 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 143


State 141

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 144


State 142

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 17 (statement)


State 143

   15 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)


State 144

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 42

    $default  reduce using rule 57 (vars)

    vars  go to state 145
    var   go to state 64


State 145

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 146


State 146

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 68
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 54

    expression           go to state 147
    multiplicative-expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 147

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 148


State 148

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 11 (statements)

    statements  go to state 149
    statement   go to state 44
    var         go to state 45


State 149

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 150

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)
